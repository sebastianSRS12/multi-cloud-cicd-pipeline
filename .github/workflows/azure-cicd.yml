name: Azure CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Decide validation mode
        id: gate
        run: |
          if [ -n "${{ secrets.AZURE_CLIENT_ID }}" ]; then
            echo "run_tf=true" >> $GITHUB_OUTPUT
          else
            echo "run_tf=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Terraform
        if: steps.gate.outputs.run_tf == 'true'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        if: steps.gate.outputs.run_tf == 'true'
        run: |
          cd terraform
          terraform init -backend-config="bucket=multi-cloud-terraform-state" \
            -backend-config="key=multi-cloud/terraform.tfstate" \
            -backend-config="region=us-east-1" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=terraform-locks"

      - name: Terraform Validate
        if: steps.gate.outputs.run_tf == 'true'
        run: |
          cd terraform
          terraform validate

      - name: Terraform Plan
        if: steps.gate.outputs.run_tf == 'true'
        run: |
          cd terraform
          terraform plan -no-color

  build-and-test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        run: docker --version

      - name: Build Docker image
        run: |
          cd app
          docker build -t multi-cloud-app:test .

      - name: Test Docker container
        run: |
          cd app
          docker run -d --name test-app -p 5000:5000 multi-cloud-app:test
          sleep 10
          curl -f http://localhost:5000/health
          docker stop test-app
          docker rm test-app

  deploy:
    runs-on: ubuntu-latest
    needs: [validate, build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Azure CLI
        run: az version

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.AZURE_REGISTRY }}

        # NOTE: Azure Container Registry is treated as a protected, non-production registry
      - name: Build and push Docker image to ACR
        run: |
          IMAGE_URI="${{ secrets.AZURE_REGISTRY }}.azurecr.io/multi-cloud-app:latest"
          cd app
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Deploy to AKS with Helm
        run: |
          helm upgrade --install multi-cloud-app ./helm \
            --set image.repository=${{ secrets.AZURE_REGISTRY }}.azurecr.io/multi-cloud-app \
            --set cloudProvider=Azure \
            --wait
# Placeholder: Add deployment steps for additional cloud providers here
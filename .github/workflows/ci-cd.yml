name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: |
        cd terraform
        terraform init \
          -backend-config="bucket=multi-cloud-terraform-state" \
          -backend-config="key=multi-cloud/terraform.tfstate" \
          -backend-config="region=${{ secrets.AWS_REGION }}" \
          -backend-config="encrypt=true" \
          -backend-config="dynamodb_table=terraform-locks"

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -no-color

  build-and-test:
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      run: |
        docker --version

    - name: Build Docker image
      run: |
        cd app
        docker build -t multi-cloud-app:test .

    - name: Test Docker container
      run: |
        cd app
        docker run -d --name test-app -p 5000:5000 multi-cloud-app:test
        sleep 10
        curl -f http://localhost:5000/health
        docker stop test-app
        docker rm test-app

  deploy:
    runs-on: ubuntu-latest
    needs: [validate, build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build and push Docker images
      run: |
        # Login to registries (add GCP and Azure credentials as needed)
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

        # Build and push (simplified - add other registries)
        cd app
        docker build -t multi-cloud-app:latest .
        docker tag multi-cloud-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/multi-cloud-app:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/multi-cloud-app:latest

    - name: Deploy message
      run: |
        echo "Deployment would happen here with the updated scripts"
        echo "Run ./scripts/cicd_pipeline.sh locally with proper credentials"